{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alepez\\\\CascadeProjects\\\\billing-system-webapp\\\\frontend\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport LoginPage from './LoginPage';\nimport PasswordResetRequest from './PasswordResetRequest';\nimport PasswordResetForm from './PasswordResetForm';\nimport PasswordResetPage from './PasswordResetPage';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [route, setRoute] = useState(window.location.pathname);\n\n  // Navigation helpers\n  const goLogin = () => {\n    window.history.pushState({}, '', '/login');\n    setRoute('/login');\n    setUser(null);\n  };\n  const goApp = () => {\n    window.history.pushState({}, '', '/');\n    setRoute('/');\n  };\n  const goReset = token => {\n    window.history.pushState({}, '', `/password-reset/${token}`);\n    setRoute(`/password-reset/${token}`);\n  };\n  const handleLogout = () => {\n    setUser(null);\n    goLogin();\n  };\n\n  // Au démarrage, tente de restaurer l'utilisateur depuis sessionStorage\n  useEffect(() => {\n    const savedUser = sessionStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n  }, []);\n\n  // À chaque changement d'utilisateur, mets à jour sessionStorage\n  useEffect(() => {\n    if (user) {\n      sessionStorage.setItem('user', JSON.stringify(user));\n    } else {\n      sessionStorage.removeItem('user');\n    }\n  }, [user]);\n  const handleLogin = data => {\n    setUser(data);\n    goApp();\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset/:token\",\n        element: /*#__PURE__*/_jsxDEV(PasswordResetPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin,\n          onShowReset: () => setRoute('/reset-request')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset-request\",\n        element: /*#__PURE__*/_jsxDEV(PasswordResetRequest, {\n          onBack: goLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/password-reset/:token\",\n        element: /*#__PURE__*/_jsxDEV(PasswordResetForm, {\n          token: route.split('/').pop(),\n          onBack: goLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: user ? /*#__PURE__*/_jsxDEV(App, {\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin,\n          onShowReset: () => setRoute('/reset-request')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"lSkNqcjEqj3ye2WtSfZG9yzZ/D8=\");\n_c = Main;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 13\n}, this));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","App","LoginPage","PasswordResetRequest","PasswordResetForm","PasswordResetPage","serviceWorkerRegistration","reportWebVitals","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","Main","_s","user","setUser","route","setRoute","window","location","pathname","goLogin","history","pushState","goApp","goReset","token","handleLogout","savedUser","sessionStorage","getItem","JSON","parse","setItem","stringify","removeItem","handleLogin","data","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onShowReset","onBack","split","pop","onLogout","_c","root","createRoot","document","getElementById","render","unregister","$RefreshReg$"],"sources":["C:/Users/alepez/CascadeProjects/billing-system-webapp/frontend/frontend/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport LoginPage from './LoginPage';\nimport PasswordResetRequest from './PasswordResetRequest';\nimport PasswordResetForm from './PasswordResetForm';\nimport PasswordResetPage from './PasswordResetPage';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nfunction Main() {\n  const [user, setUser] = useState(null);\n  const [route, setRoute] = useState(window.location.pathname);\n\n  // Navigation helpers\n  const goLogin = () => { window.history.pushState({}, '', '/login'); setRoute('/login'); setUser(null); };\n  const goApp = () => { window.history.pushState({}, '', '/'); setRoute('/'); };\n  const goReset = (token) => { window.history.pushState({}, '', `/password-reset/${token}`); setRoute(`/password-reset/${token}`); };\n\n  const handleLogout = () => {\n    setUser(null);\n    goLogin();\n  };\n\n  // Au démarrage, tente de restaurer l'utilisateur depuis sessionStorage\n  useEffect(() => {\n    const savedUser = sessionStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n  }, []);\n\n  // À chaque changement d'utilisateur, mets à jour sessionStorage\n  useEffect(() => {\n    if (user) {\n      sessionStorage.setItem('user', JSON.stringify(user));\n    } else {\n      sessionStorage.removeItem('user');\n    }\n  }, [user]);\n\n  const handleLogin = (data) => {\n    setUser(data);\n    goApp();\n  };\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/reset/:token\" element={<PasswordResetPage />} />\n        <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} onShowReset={() => setRoute('/reset-request')} />} />\n        <Route path=\"/reset-request\" element={<PasswordResetRequest onBack={goLogin} />} />\n        <Route path=\"/password-reset/:token\" element={<PasswordResetForm token={route.split('/').pop()} onBack={goLogin} />} />\n        {/* Route par défaut : l'app existante */}\n        <Route path=\"*\" element={user ? <App user={user} onLogout={handleLogout} /> : <LoginPage onLogin={handleLogin} onShowReset={() => setRoute('/reset-request')} />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Main />);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}