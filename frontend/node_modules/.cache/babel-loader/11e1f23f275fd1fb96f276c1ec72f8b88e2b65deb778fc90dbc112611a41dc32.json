{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alepez\\\\CascadeProjects\\\\billing-system-webapp\\\\frontend\\\\frontend\\\\src\\\\PasswordResetPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PasswordResetPage() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    const res = await fetch(`/api/password-reset/${token}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password\n      })\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setSuccess(true);\n      setMessage('Mot de passe réinitialisé. Vous pouvez vous connecter.');\n      setTimeout(() => navigate('/login'), 2000);\n    } else {\n      setMessage(data.error || 'Erreur lors de la réinitialisation.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: 400,\n      margin: '64px auto',\n      padding: 32,\n      background: '#222',\n      borderRadius: 10,\n      color: '#fff',\n      boxShadow: '0 2px 16px #0008'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"R\\xE9initialiser le mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Nouveau mot de passe\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true,\n      style: {\n        width: '100%',\n        padding: 10,\n        margin: '16px 0',\n        borderRadius: 6,\n        border: 'none',\n        fontSize: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        width: '100%',\n        padding: 10,\n        borderRadius: 6,\n        background: '#ffa500',\n        color: '#222',\n        fontWeight: 700,\n        fontSize: 16,\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16,\n        color: success ? '#0f0' : '#f55'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordResetPage, \"NTSEgBEWO0bp8zoofH0Zxe5Czio=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PasswordResetPage;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","PasswordResetPage","_s","token","password","setPassword","message","setMessage","success","setSuccess","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","error","onSubmit","style","maxWidth","margin","padding","background","borderRadius","color","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","width","border","fontSize","fontWeight","cursor","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/alepez/CascadeProjects/billing-system-webapp/frontend/frontend/src/PasswordResetPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nexport default function PasswordResetPage() {\n  const { token } = useParams();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    const res = await fetch(`/api/password-reset/${token}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ password }),\n    });\n    const data = await res.json();\n    if (res.ok) {\n      setSuccess(true);\n      setMessage('Mot de passe réinitialisé. Vous pouvez vous connecter.');\n      setTimeout(() => navigate('/login'), 2000);\n    } else {\n      setMessage(data.error || 'Erreur lors de la réinitialisation.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{maxWidth:400,margin:'64px auto',padding:32,background:'#222',borderRadius:10,color:'#fff',boxShadow:'0 2px 16px #0008'}}>\n      <h2>Réinitialiser le mot de passe</h2>\n      <input\n        type=\"password\"\n        placeholder=\"Nouveau mot de passe\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n        required\n        style={{width:'100%',padding:10,margin:'16px 0',borderRadius:6,border:'none',fontSize:16}}\n      />\n      <button type=\"submit\" style={{width:'100%',padding:10,borderRadius:6,background:'#ffa500',color:'#222',fontWeight:700,fontSize:16,border:'none',cursor:'pointer'}}>Valider</button>\n      {message && <div style={{marginTop:16,color:success?'#0f0':'#f55'}}>{message}</div>}\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}