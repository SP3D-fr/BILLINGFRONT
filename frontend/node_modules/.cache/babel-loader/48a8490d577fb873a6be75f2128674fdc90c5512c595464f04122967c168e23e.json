{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alepez\\\\CascadeProjects\\\\billing-system-webapp\\\\frontend\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport LoginPage from './LoginPage';\nimport PasswordResetRequest from './PasswordResetRequest';\nimport PasswordResetForm from './PasswordResetForm';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RootRouter() {\n  _s();\n  const [route, setRoute] = useState(() => {\n    if (window.location.pathname.startsWith('/password-reset/')) return 'reset';\n    if (window.location.pathname === '/login') return 'login';\n    return 'app';\n  });\n  const [resetToken, setResetToken] = useState(() => {\n    const match = window.location.pathname.match(/\\/password-reset\\/(.+)$/);\n    return match ? match[1] : '';\n  });\n  const [user, setUser] = useState(null);\n\n  // Navigation helpers\n  const goLogin = () => {\n    window.history.pushState({}, '', '/login');\n    setRoute('login');\n    setUser(null);\n  };\n  const goApp = () => {\n    window.history.pushState({}, '', '/');\n    setRoute('app');\n  };\n  const goReset = token => {\n    window.history.pushState({}, '', `/password-reset/${token}`);\n    setResetToken(token);\n    setRoute('reset');\n  };\n  const handleLogout = () => {\n    setUser(null);\n    goLogin();\n  };\n\n  // Au démarrage, tente de restaurer l'utilisateur depuis sessionStorage\n  useEffect(() => {\n    const savedUser = sessionStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n  }, []);\n\n  // À chaque changement d'utilisateur, mets à jour sessionStorage\n  useEffect(() => {\n    if (user) {\n      sessionStorage.setItem('user', JSON.stringify(user));\n    } else {\n      sessionStorage.removeItem('user');\n    }\n  }, [user]);\n  const handleLogin = data => {\n    setUser(data);\n    goApp();\n  };\n  if (route === 'login') return /*#__PURE__*/_jsxDEV(LoginPage, {\n    onLogin: handleLogin,\n    onShowReset: () => setRoute('reset-request')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n  if (route === 'reset-request') return /*#__PURE__*/_jsxDEV(PasswordResetRequest, {\n    onBack: goLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n  if (route === 'reset') return /*#__PURE__*/_jsxDEV(PasswordResetForm, {\n    token: resetToken,\n    onBack: goLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n  // Si pas connecté, redirige vers login\n  if (!user) return /*#__PURE__*/_jsxDEV(LoginPage, {\n    onLogin: handleLogin,\n    onShowReset: () => setRoute('reset-request')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(App, {\n    user: user,\n    onLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n}\n_s(RootRouter, \"5oAt0SjTMdQXqC6D2Xw4YAw+0ac=\");\n_c = RootRouter;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RootRouter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"RootRouter\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","App","LoginPage","PasswordResetRequest","PasswordResetForm","serviceWorkerRegistration","reportWebVitals","jsxDEV","_jsxDEV","RootRouter","_s","route","setRoute","window","location","pathname","startsWith","resetToken","setResetToken","match","user","setUser","goLogin","history","pushState","goApp","goReset","token","handleLogout","savedUser","sessionStorage","getItem","JSON","parse","setItem","stringify","removeItem","handleLogin","data","onLogin","onShowReset","fileName","_jsxFileName","lineNumber","columnNumber","onBack","onLogout","_c","root","createRoot","document","getElementById","render","StrictMode","children","unregister","$RefreshReg$"],"sources":["C:/Users/alepez/CascadeProjects/billing-system-webapp/frontend/frontend/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport LoginPage from './LoginPage';\nimport PasswordResetRequest from './PasswordResetRequest';\nimport PasswordResetForm from './PasswordResetForm';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nfunction RootRouter() {\n  const [route, setRoute] = useState(() => {\n    if (window.location.pathname.startsWith('/password-reset/')) return 'reset';\n    if (window.location.pathname === '/login') return 'login';\n    return 'app';\n  });\n  const [resetToken, setResetToken] = useState(() => {\n    const match = window.location.pathname.match(/\\/password-reset\\/(.+)$/);\n    return match ? match[1] : '';\n  });\n  const [user, setUser] = useState(null);\n\n  // Navigation helpers\n  const goLogin = () => { window.history.pushState({}, '', '/login'); setRoute('login'); setUser(null); };\n  const goApp = () => { window.history.pushState({}, '', '/'); setRoute('app'); };\n  const goReset = (token) => { window.history.pushState({}, '', `/password-reset/${token}`); setResetToken(token); setRoute('reset'); };\n\n  const handleLogout = () => {\n    setUser(null);\n    goLogin();\n  };\n\n  // Au démarrage, tente de restaurer l'utilisateur depuis sessionStorage\n  useEffect(() => {\n    const savedUser = sessionStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n  }, []);\n\n  // À chaque changement d'utilisateur, mets à jour sessionStorage\n  useEffect(() => {\n    if (user) {\n      sessionStorage.setItem('user', JSON.stringify(user));\n    } else {\n      sessionStorage.removeItem('user');\n    }\n  }, [user]);\n\n  const handleLogin = (data) => {\n    setUser(data);\n    goApp();\n  };\n\n  if (route === 'login')\n    return <LoginPage onLogin={handleLogin} onShowReset={() => setRoute('reset-request')} />;\n  if (route === 'reset-request')\n    return <PasswordResetRequest onBack={goLogin} />;\n  if (route === 'reset')\n    return <PasswordResetForm token={resetToken} onBack={goLogin} />;\n  // Si pas connecté, redirige vers login\n  if (!user) return <LoginPage onLogin={handleLogin} onShowReset={() => setRoute('reset-request')} />;\n  return <App user={user} onLogout={handleLogout} />;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <RootRouter />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}